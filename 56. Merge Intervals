/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
class Solution {
    public List<Interval> merge(List<Interval> intervals) {
        if(intervals==null||intervals.size()<=1){
            return intervals;
        }
        Collections.sort(intervals,(a,b)->a.start-b.start);
        List<Interval> result=new ArrayList<>();
        int start=intervals.get(0).start;
        int end=intervals.get(0).end;
        for(int i=1;i<intervals.size();i++){
            if(intervals.get(i).start<=end){
                end=Math.max(end,intervals.get(i).end);
            }else{
                result.add(new Interval(start,end));
                start=intervals.get(i).start;
                end=intervals.get(i).end;
            }
        }
        result.add(new Interval(start,end));
        return result;
    }
}

这个题注意list排序的方法
Collections.sort(list名，(a,b)->a.start-b.start)
a和b实际上就是list里面两个元素，代号是a和b,类是Interval类. a-b就是从小到大排 
