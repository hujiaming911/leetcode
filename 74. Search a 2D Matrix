class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        if(matrix.length==0||matrix[0].length==0){
            return false;
        }
        int row=matrix.length;
        int col=matrix[0].length;
        int start=0;
        int end=row*col-1;
        while(start<=end){
            int mid=(end-start)/2+start;
            int value=matrix[mid/col][mid%col];
            if(value==target){
                return true;
            }else if(value<target){
                start=mid+1;
            }else{
                end=mid-1;
            }
        }
        return false;
    }
}

思想：可以把这个二维数组从左到右从上到下想成一位数组就变成了二分法
      这样的数组现位置-----原位置        now-----[now/col][non%col]
      
      
与之类似的题目是240
240不是二分法，因为此题归为二分
