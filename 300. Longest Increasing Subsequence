class Solution {
    public int lengthOfLIS(int[] nums) {
        int[] tails=new int[nums.length];
        int size=0;
        for(int num:nums){
            int i=0;
            int j=size;
            while(i!=j){
                int mid=(j-i)/2+i;
                if(tails[mid]<num){
                    i=mid+1;
                }else{
                    j=mid;
                }
            }
            tails[i]=num;
            if(i==size){
                size++;
            }
        }
        return size;
    }
}


这个题需要常看才能记住
大体思想就是  新建一个数组，先遍历原数组，第一遍执行时候就先把原数组第一个元素放进新数组，然后接下来如果碰到比新数组的当前元素小的，就把新数组的那个数
替换掉，如果碰到比新数组的当前元素大的，就放进来，同时指针加一

size就是新数组里面当前有效元素个数，i一开始指向新数组开头，j一开始指向新数组末尾，中间的二分法就是确定是不是i+1了（若i+1,那么底下的tails[i]就是下一个
位置的数了，若没+1,只是j变了，则相当于替换掉）
