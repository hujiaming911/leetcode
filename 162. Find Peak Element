class Solution {
    public int findPeakElement(int[] nums) {
        int start=0;
        int end=nums.length-1;
        while(start<=end){
            if(start==end){
                return start;
            }
            int mid= (end-start)/2+start;
            if(nums[mid]>nums[mid+1]){
                end=mid;
            }else{
                start=mid+1;
            }
        }
        return start;
    }
}


如果nums[mid]>nums[mid+1]了,那么mid就有可能是极值，所以把范围缩小到end=mid
而如果nums[mid]<nums[mid+1],则mid不可能是极值，所以给start=mid+1让范围往右走（因为一直走到最右边，最右边是可以当成极值的（nums[n]=-无穷大））
当start=end时就是极值了
