class Solution {
    public int[] intersect(int[] nums1, int[] nums2) {
        Map<Integer,Integer> map=new HashMap<>();
        List<Integer> list=new ArrayList<>();
        for(int i=0;i<nums1.length;i++){
            map.put(nums1[i],map.getOrDefault(nums1[i],0)+1);
        }
        for(int i=0;i<nums2.length;i++){
            if(map.containsKey(nums2[i])&&map.get(nums2[i])>0){
                list.add(nums2[i]);
                map.put(nums2[i],map.get(nums2[i])-1);
            }
        }
        int k=0;
        int[] arr=new int[list.size()];
        for(Integer num:list){
            arr[k++]=num;
        }
        return arr;
    }
}

和349差不多，不用binarysearch.就是换成hashmap，先把nums1全部放进map，注意写法map.put(nums1[i],map.getOrDefault(nums1[i],0)+1);
然后对nums2遍历，如果map里面包含并包含的数大于0，就放进list,并把包含的数减1
最后还是遍历list的写法  for(Integer num:list)

map.put()
map.get()
map.getOrDefault()
map.size()
map.containsKey()
map.containsValue()
